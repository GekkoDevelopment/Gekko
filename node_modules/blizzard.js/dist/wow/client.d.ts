import { Blizzard, BlizzardClient, Headers } from '../core';
import { ProtectedResourceOptions, ResourceResponse, ResourceOptions } from '../resources';
import * as wow from '../resources/wow';
export interface WoWClient extends BlizzardClient {
    accountCharacterProfile<T = any>(args: ProtectedResourceOptions<wow.AccountCharacterProfileOptions>, headers?: Headers): ResourceResponse<T>;
    accountCollections<T = any>(args: ProtectedResourceOptions<wow.AccountCollectionsOptions>, headers?: Headers): ResourceResponse<T>;
    accountProfile<T = any>(args: ProtectedResourceOptions<wow.AccountProfileOptions>, headers?: Headers): ResourceResponse<T>;
    achievement<T = any>(args?: null | ResourceOptions<wow.AchievementOptions>, headers?: Headers): ResourceResponse<T>;
    achievementCategory<T = any>(args?: null | ResourceOptions<wow.AchievementCategoryOptions>, headers?: Headers): ResourceResponse<T>;
    auctionHouse<T = any>(args: ResourceOptions<wow.AuctionHouseOptions>, headers?: Headers): ResourceResponse<T>;
    azeriteEssence<T = any>(args?: null | ResourceOptions<wow.AzeriteEssenceOptions>, headers?: Headers): ResourceResponse<T>;
    azeriteEssenceSearch<T = any>(args: ResourceOptions<wow.AzeriteEssenceSearchOptions>, headers?: Headers): ResourceResponse<T>;
    characterAchievements<T = any>(args: ResourceOptions<wow.AccountCharacterAchievementsOptions>, headers?: Headers): ResourceResponse<T>;
    characterAppearance<T = any>(args: ResourceOptions<wow.CharacterAppearanceOptions>, headers?: Headers): ResourceResponse<T>;
    characterCollections<T = any>(args: ResourceOptions<wow.CharacterCollectionsOptions>, headers?: Headers): ResourceResponse<T>;
    characterEncounters<T = any>(args: ResourceOptions<wow.CharacterEncountersOptions>, headers?: Headers): ResourceResponse<T>;
    characterEquipment<T = any>(args: ResourceOptions<wow.CharacterEquipmentOptions>, headers?: Headers): ResourceResponse<T>;
    characterHunterPets<T = any>(args: ResourceOptions<wow.CharacterHunterPetsOptions>, headers?: Headers): ResourceResponse<T>;
    characterMedia<T = any>(args: ResourceOptions<wow.CharacterMediaOptions>, headers?: Headers): ResourceResponse<T>;
    characterMythicKeystone<T = any>(args: ResourceOptions<wow.CharacterMythicKeystoneOptions>, headers?: Headers): ResourceResponse<T>;
    characterProfessions<T = any>(args: ResourceOptions<wow.CharacterProfessionsOptions>, headers?: Headers): ResourceResponse<T>;
    characterProfile<T = any>(args: ResourceOptions<wow.CharacterProfileOptions>, headers?: Headers): ResourceResponse<T>;
    characterPVP<T = any>(args: ResourceOptions<wow.CharacterPVPOptions>, headers?: Headers): ResourceResponse<T>;
    characterQuests<T = any>(args: ResourceOptions<wow.CharacterQuestsOptions>, headers?: Headers): ResourceResponse<T>;
    characterReputations<T = any>(args: ResourceOptions<wow.CharacterReputationsOptions>, headers?: Headers): ResourceResponse<T>;
    characterSoulbinds<T = any>(args: ResourceOptions<wow.CharacterSoulbindsOptions>, headers?: Headers): ResourceResponse<T>;
    characterSpecializations<T = any>(args: ResourceOptions<wow.CharacterSpecializationsOptions>, headers?: Headers): ResourceResponse<T>;
    characterStatistics<T = any>(args: ResourceOptions<wow.CharacterStatisticsOptions>, headers?: Headers): ResourceResponse<T>;
    characterTitles<T = any>(args: ResourceOptions<wow.CharacterTitlesOptions>, headers?: Headers): ResourceResponse<T>;
    conduit<T = any>(args?: null | ResourceOptions<wow.ConduitOptions>, headers?: Headers): ResourceResponse<T>;
    connectedRealm<T = any>(args?: null | ResourceOptions<wow.ConnectedRealmOptions>, headers?: Headers): ResourceResponse<T>;
    connectedRealmSearch<T = any>(args: ResourceOptions<wow.ConnectedRealmSearchOptions>, headers?: Headers): ResourceResponse<T>;
    commodities<T = any>(args?: null | ResourceOptions<wow.CommoditiesOptions>, headers?: Headers): ResourceResponse<T>;
    covenant<T = any>(args?: null | ResourceOptions<wow.CovenantOptions>, headers?: Headers): ResourceResponse<T>;
    creature<T = any>(args: ResourceOptions<wow.CreatureOptions>, headers?: Headers): ResourceResponse<T>;
    creatureFamily<T = any>(args?: null | ResourceOptions<wow.CreatureFamilyOptions>, headers?: Headers): ResourceResponse<T>;
    creatureSearch<T = any>(args: ResourceOptions<wow.CreatureSearchOptions>, headers?: Headers): ResourceResponse<T>;
    creatureType<T = any>(args?: null | ResourceOptions<wow.CreatureTypeOptions>, headers?: Headers): ResourceResponse<T>;
    guild<T = any>(args: ResourceOptions<wow.GuildOptions>, headers?: Headers): ResourceResponse<T>;
    guildCrest<T = any>(args?: null | ResourceOptions<wow.GuildCrestOptions>, headers?: Headers): ResourceResponse<T>;
    item<T = any>(args: ResourceOptions<wow.ItemOptions>, headers?: Headers): ResourceResponse<T>;
    itemSearch<T = any>(args: ResourceOptions<wow.ItemSearchOptions>, headers?: Headers): ResourceResponse<T>;
    journal<T = any>(args: ResourceOptions<wow.JournalOptions>, headers?: Headers): ResourceResponse<T>;
    mediaSearch<T = any>(args: ResourceOptions<wow.MediaSearchOptions>, headers?: Headers): ResourceResponse<T>;
    modifiedCrafting<T = any>(args?: null | ResourceOptions<wow.ModifiedCraftingOptions>, headers?: Headers): ResourceResponse<T>;
    mount<T = any>(args?: null | ResourceOptions<wow.MountOptions>, headers?: Headers): ResourceResponse<T>;
    mountSearch<T = any>(args: ResourceOptions<wow.MountSearchOptions>, headers?: Headers): ResourceResponse<T>;
    mythicKeystone<T = any>(args?: null | ResourceOptions<wow.MythicKeystoneOptions>, headers?: Headers): ResourceResponse<T>;
    mythicKeystoneAffix<T = any>(args?: null | ResourceOptions<wow.MythicKeystoneAffixOptions>, headers?: Headers): ResourceResponse<T>;
    mythicKeystoneLeaderboard<T = any>(args: ResourceOptions<wow.MythicKeystoneLeaderboardOptions>, headers?: Headers): ResourceResponse<T>;
    mythicRaidLeaderboard<T = any>(args: ResourceOptions<wow.MythicRaidLeaderboardOptions>, headers?: Headers): ResourceResponse<T>;
    pet<T = any>(args?: null | ResourceOptions<wow.PetOptions>, headers?: Headers): ResourceResponse<T>;
    playableClass<T = any>(args?: null | ResourceOptions<wow.PlayableClassOptions>, headers?: Headers): ResourceResponse<T>;
    playableRace<T = any>(args?: null | ResourceOptions<wow.PlayableRaceOptions>, headers?: Headers): ResourceResponse<T>;
    playableSpecialization<T = any>(args?: null | ResourceOptions<wow.PlayableSpecializationOptions>, headers?: Headers): ResourceResponse<T>;
    powerType<T = any>(args?: null | ResourceOptions<wow.PowerTypeOptions>, headers?: Headers): ResourceResponse<T>;
    profession<T = any>(args?: null | ResourceOptions<wow.ProfessionOptions>, headers?: Headers): ResourceResponse<T>;
    pvpSeason<T = any>(args?: null | ResourceOptions<wow.PVPSeasonOptions>, headers?: Headers): ResourceResponse<T>;
    pvpTier<T = any>(args?: null | ResourceOptions<wow.PVPTierOptions>, headers?: Headers): ResourceResponse<T>;
    quest<T = any>(args?: null | ResourceOptions<wow.QuestOptions>, headers?: Headers): ResourceResponse<T>;
    realm<T = any>(args?: null | ResourceOptions<wow.RealmOptions>, headers?: Headers): ResourceResponse<T>;
    realmSearch<T = any>(args: ResourceOptions<wow.RealmSearchOptions>, headers?: Headers): ResourceResponse<T>;
    recipe<T = any>(args: ResourceOptions<wow.RecipeOptions>, headers?: Headers): ResourceResponse<T>;
    region<T = any>(args?: null | ResourceOptions<wow.RegionOptions>, headers?: Headers): ResourceResponse<T>;
    reputation<T = any>(args: ResourceOptions<wow.ReputationOptions>, headers?: Headers): ResourceResponse<T>;
    soulbind<T = any>(args?: null | ResourceOptions<wow.SoulbindOptions>, headers?: Headers): ResourceResponse<T>;
    spell<T = any>(args: ResourceOptions<wow.SpellOptions>, headers?: Headers): ResourceResponse<T>;
    spellSearch<T = any>(args: ResourceOptions<wow.SpellSearchOptions>, headers?: Headers): ResourceResponse<T>;
    talent<T = any>(args?: null | ResourceOptions<wow.TalentOptions>, headers?: Headers): ResourceResponse<T>;
    techTalent<T = any>(args?: null | ResourceOptions<wow.TechTalentOptions>, headers?: Headers): ResourceResponse<T>;
    title<T = any>(args?: null | ResourceOptions<wow.TitleOptions>, headers?: Headers): ResourceResponse<T>;
    token<T = any>(args?: null | ResourceOptions<wow.TokenOptions>, headers?: Headers): ResourceResponse<T>;
}
export declare class WoW extends Blizzard implements WoWClient {
    accountCharacterProfile: (args: Partial<import("../core").ClientOptions> & wow.AccountCharacterProfileOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    accountCollections: (args: Partial<import("../core").ClientOptions> & wow.AccountCollectionsOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    accountProfile: (args: any, headers?: Headers | undefined) => ResourceResponse<any>;
    achievement: (args: Partial<import("../core").ClientOptions> & wow.AchievementOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    achievementCategory: (args: Partial<import("../core").ClientOptions> & wow.AchievementCategoryOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    auctionHouse: (args: Partial<import("../core").ClientOptions> & wow.AuctionHouseOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    azeriteEssence: (args: Partial<import("../core").ClientOptions> & wow.AzeriteEssenceOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    azeriteEssenceSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        id: number;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterAchievements: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        stats?: boolean | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterAppearance: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterCollections: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        resource?: "mounts" | "pets" | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterEncounters: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        resource?: "dungeons" | "raids" | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterEquipment: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterHunterPets: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterMedia: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterMythicKeystone: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        season?: number | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterProfessions: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterProfile: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        status?: boolean | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterPVP: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        bracket?: string | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterQuests: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    } & {
        completed?: boolean | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterReputations: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterSoulbinds: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterSpecializations: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterStatistics: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    characterTitles: (args: Partial<import("../core").ClientOptions> & {
        realm: string;
        name: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    conduit: (args: Partial<import("../core").ClientOptions> & wow.ConduitOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    commodities: (args: any, headers?: Headers | undefined) => ResourceResponse<any>;
    connectedRealm: (args: Partial<import("../core").ClientOptions> & wow.ConnectedRealmOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    connectedRealmSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        status: "UP" | "DOWN";
        timezone?: string | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    covenant: (args: Partial<import("../core").ClientOptions> & wow.CovenantOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    creature: (args: Partial<import("../core").ClientOptions> & wow.CreatureOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureFamily: (args: Partial<import("../core").ClientOptions> & wow.CreatureFamilyOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureType: (args: Partial<import("../core").ClientOptions> & wow.CreatureTypeOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    guild: (args: Partial<import("../core").ClientOptions> & wow.GuildOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    guildCrest: (args: Partial<import("../core").ClientOptions> & wow.GuildCrestOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    item: (args: Partial<import("../core").ClientOptions> & wow.ItemOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    itemSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    journal: (args: Partial<import("../core").ClientOptions> & wow.JournalOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mediaSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        tag: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    modifiedCrafting: (args: Partial<import("../core").ClientOptions> & wow.ModifiedCraftingOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mount: (args: Partial<import("../core").ClientOptions> & wow.MountOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mountSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    mythicKeystone: (args: Partial<import("../core").ClientOptions> & wow.MythicKeystoneOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mythicKeystoneAffix: (args: Partial<import("../core").ClientOptions> & wow.MythicKeystoneAffixOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mythicKeystoneLeaderboard: (args: Partial<import("../core").ClientOptions> & wow.MythicKeystoneLeaderboardOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    mythicRaidLeaderboard: (args: Partial<import("../core").ClientOptions> & wow.MythicRaidLeaderboardOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    pet: (args: Partial<import("../core").ClientOptions> & wow.PetOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    playableClass: (args: Partial<import("../core").ClientOptions> & wow.PlayableClassOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    playableRace: (args: Partial<import("../core").ClientOptions> & wow.PlayableRaceOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    playableSpecialization: (args: Partial<import("../core").ClientOptions> & wow.PlayableSpecializationOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    powerType: (args: Partial<import("../core").ClientOptions> & wow.PowerTypeOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    profession: (args: Partial<import("../core").ClientOptions> & wow.ProfessionOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    pvpSeason: (args: Partial<import("../core").ClientOptions> & (wow.PVPSeasonOptions | null | undefined), headers?: Headers | undefined) => ResourceResponse<any>;
    pvpTier: (args: Partial<import("../core").ClientOptions> & wow.PVPTierOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    quest: (args: Partial<import("../core").ClientOptions> & wow.QuestOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    realm: (args: Partial<import("../core").ClientOptions> & wow.RealmOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    realmSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        timezone?: string | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    recipe: (args: Partial<import("../core").ClientOptions> & wow.RecipeOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    region: (args: Partial<import("../core").ClientOptions> & wow.RegionOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    reputation: (args: Partial<import("../core").ClientOptions> & wow.ReputationOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    soulbind: (args: Partial<import("../core").ClientOptions> & wow.SoulbindOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    spell: (args: Partial<import("../core").ClientOptions> & wow.SpellOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    spellSearch: (args: Partial<import("../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    talent: (args: Partial<import("../core").ClientOptions> & wow.TalentOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    techTalent: (args: (Partial<import("../core").ClientOptions> & {
        id?: number | undefined;
        tree?: undefined;
        media?: boolean | undefined;
    }) | (Partial<import("../core").ClientOptions> & {
        id?: number | undefined;
        tree?: boolean | undefined;
        media?: undefined;
    }), headers?: Headers | undefined) => ResourceResponse<any>;
    title: (args: Partial<import("../core").ClientOptions> & wow.TitleOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    token: (args: any, headers?: Headers | undefined) => ResourceResponse<any>;
}
