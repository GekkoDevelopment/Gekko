import { Blizzard, BlizzardClient, Headers } from '../../core';
import { ResourceResponse, ResourceOptions } from '../../resources';
import * as classic from '../../resources/classic';
import * as wow from '../../resources/wow';
export interface WoWClassicClient extends BlizzardClient {
    auctionHouse<T = any>(args: ResourceOptions<classic.AuctionHouseOptions>, headers?: Headers): ResourceResponse<T>;
    connectedRealm<T = any>(args?: null | ResourceOptions<wow.ConnectedRealmOptions>, headers?: Headers): ResourceResponse<T>;
    connectedRealmSearch<T = any>(args: ResourceOptions<wow.ConnectedRealmSearchOptions>, headers?: Headers): ResourceResponse<T>;
    creature<T = any>(args: ResourceOptions<wow.CreatureOptions>, headers?: Headers): ResourceResponse<T>;
    creatureFamily<T = any>(args?: null | ResourceOptions<wow.CreatureFamilyOptions>, headers?: Headers): ResourceResponse<T>;
    creatureSearch<T = any>(args: ResourceOptions<wow.CreatureSearchOptions>, headers?: Headers): ResourceResponse<T>;
    creatureType<T = any>(args?: null | ResourceOptions<wow.CreatureTypeOptions>, headers?: Headers): ResourceResponse<T>;
    guildCrest<T = any>(args?: null | ResourceOptions<wow.GuildCrestOptions>, headers?: Headers): ResourceResponse<T>;
    item<T = any>(args: ResourceOptions<wow.ItemOptions>, headers?: Headers): ResourceResponse<T>;
    itemSearch<T = any>(args: ResourceOptions<wow.ItemSearchOptions>, headers?: Headers): ResourceResponse<T>;
    mediaSearch<T = any>(args: ResourceOptions<wow.MediaSearchOptions>, headers?: Headers): ResourceResponse<T>;
    playableClass<T = any>(args?: null | ResourceOptions<wow.PlayableClassOptions>, headers?: Headers): ResourceResponse<T>;
    playableRace<T = any>(args?: null | ResourceOptions<wow.PlayableRaceOptions>, headers?: Headers): ResourceResponse<T>;
    powerType<T = any>(args?: null | ResourceOptions<wow.PowerTypeOptions>, headers?: Headers): ResourceResponse<T>;
    realm<T = any>(args?: null | ResourceOptions<wow.RealmOptions>, headers?: Headers): ResourceResponse<T>;
    realmSearch<T = any>(args: ResourceOptions<wow.RealmSearchOptions>, headers?: Headers): ResourceResponse<T>;
    region<T = any>(args?: null | ResourceOptions<wow.RegionOptions>, headers?: Headers): ResourceResponse<T>;
    token<T = any>(args?: null | ResourceOptions<wow.TokenOptions>, headers?: Headers): ResourceResponse<T>;
}
export declare class WoWClassic extends Blizzard implements WoWClassicClient {
    auctionHouse: (args: Partial<import("../../core").ClientOptions> & classic.AuctionHouseOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    connectedRealm: (args: Partial<import("../../core").ClientOptions> & wow.ConnectedRealmOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    connectedRealmSearch: (args: Partial<import("../../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        status: "UP" | "DOWN";
        timezone?: string | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    creature: (args: Partial<import("../../core").ClientOptions> & wow.CreatureOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureFamily: (args: Partial<import("../../core").ClientOptions> & wow.CreatureFamilyOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureSearch: (args: Partial<import("../../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    creatureType: (args: Partial<import("../../core").ClientOptions> & wow.CreatureTypeOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    guildCrest: (args: Partial<import("../../core").ClientOptions> & wow.GuildCrestOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    item: (args: Partial<import("../../core").ClientOptions> & wow.ItemOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    itemSearch: (args: Partial<import("../../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        name: string;
        locale: import("../../endpoints").Locales;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    mediaSearch: (args: Partial<import("../../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        tag: string;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    playableClass: (args: Partial<import("../../core").ClientOptions> & wow.PlayableClassOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    playableRace: (args: Partial<import("../../core").ClientOptions> & wow.PlayableRaceOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    powerType: (args: Partial<import("../../core").ClientOptions> & wow.PowerTypeOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    realm: (args: Partial<import("../../core").ClientOptions> & wow.RealmOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    realmSearch: (args: Partial<import("../../core").ClientOptions> & {
        orderby?: string | string[] | undefined;
        page?: number | undefined;
    } & {
        timezone?: string | undefined;
    }, headers?: Headers | undefined) => ResourceResponse<any>;
    region: (args: Partial<import("../../core").ClientOptions> & wow.RegionOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    token: (args: any, headers?: Headers | undefined) => ResourceResponse<any>;
}
