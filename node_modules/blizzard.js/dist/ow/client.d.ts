import { Blizzard, BlizzardClient, Headers } from '../core';
import { ResourceResponse, ResourceOptions } from '../resources';
import * as ow from '../resources/ow';
export interface OverwatchClient extends BlizzardClient {
    summary<T = any>(args?: null | ResourceOptions<ow.SummaryOptions>, headers?: Headers): ResourceResponse<T>;
    players<T = any>(args: ResourceOptions<ow.PlayersOptions>, headers?: Headers): ResourceResponse<T>;
    matches<T = any>(args: ResourceOptions<ow.MatchesOptions>, headers?: Headers): ResourceResponse<T>;
    segments<T = any>(args: ResourceOptions<ow.SegmentsOptions>, headers?: Headers): ResourceResponse<T>;
    teams<T = any>(args: ResourceOptions<ow.TeamsOptions>, headers?: Headers): ResourceResponse<T>;
}
export declare class Overwatch extends Blizzard implements OverwatchClient {
    summary: (args: any, headers?: Headers | undefined) => ResourceResponse<any>;
    players: (args: Partial<import("../core").ClientOptions> & ow.PlayersOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    matches: (args: Partial<import("../core").ClientOptions> & ow.MatchesOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    segments: (args: Partial<import("../core").ClientOptions> & ow.SegmentsOptions, headers?: Headers | undefined) => ResourceResponse<any>;
    teams: (args: Partial<import("../core").ClientOptions> & ow.TeamsOptions, headers?: Headers | undefined) => ResourceResponse<any>;
}
